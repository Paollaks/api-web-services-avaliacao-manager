// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_web_services_avaliacao_manager.Models;

#nullable disable

namespace api_web_services_avaliacao_manager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250328235539_add-migration M01")]
    partial class addmigrationM01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinopse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.LinkDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComentarioId")
                        .HasColumnType("int");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComentarioId");

                    b.HasIndex("FilmeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LinkDTO");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Comentario", b =>
                {
                    b.HasOne("api_web_services_avaliacao_manager.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Filme", b =>
                {
                    b.HasOne("api_web_services_avaliacao_manager.Models.Usuario", null)
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.LinkDTO", b =>
                {
                    b.HasOne("api_web_services_avaliacao_manager.Models.Comentario", null)
                        .WithMany("Links")
                        .HasForeignKey("ComentarioId");

                    b.HasOne("api_web_services_avaliacao_manager.Models.Filme", null)
                        .WithMany("Links")
                        .HasForeignKey("FilmeId");

                    b.HasOne("api_web_services_avaliacao_manager.Models.Usuario", null)
                        .WithMany("Links")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Comentario", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Filme", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("api_web_services_avaliacao_manager.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Favoritos");

                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
